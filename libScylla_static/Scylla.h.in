#pragma once

#if defined (WIN32)
#if defined (_MSC_VER)
#define SCYLLA_DECL_API _cdecl
#pragma warning(disable: 4251)
#endif
#if defined(libScylla_EXPORTS)
#define  SCYLLA_DLL_EXPORT __declspec(dllexport)
#else
#define  SCYLLA_DLL_EXPORT  /*__declspec(dllimport)*/
#endif
#else
#define SCYLLA_DLL_EXPORT 
#endif

/* Scylla Dll API error IDs */
const int SCY_ERROR_SUCCESS = 0;
const int SCY_ERROR_PROCOPEN = -1;
const int SCY_ERROR_IATWRITE = -2;
const int SCY_ERROR_IATSEARCH = -3;
const int SCY_ERROR_IATNOTFOUND = -4;
const int SCY_ERROR_PIDNOTFOUND = -5;

#include "ConfigurationHolder.h"
#include "PluginLoader.h"
#include "ProcessLister.h"
#include "Logger.h"

#define APPNAME TEXT("Scylla")
#define APPVERSION TEXT("v@VERSION_TCHAR@")
#define APPVERSIONDWORD 0x@VERSION_DWORD@

#define DONATE_BTC_ADDRESS TEXT("1C6NN81V9pA6jq9r2HYBZkbrXPTTc7qTXq")

/* Scylla current context. */
typedef size_t SCY_HANDLE, *PSCY_HANDLE;

class Scylla
{
public:
    static LPCTSTR get_version_information();
    static DWORD get_version();
    static void initialize(Logger *log, bool isStandalone);
    static bool initialize_context(PSCY_HANDLE phCtxt, DWORD_PTR TargetProcessPid);
    static bool deinitialize_context(SCY_HANDLE hCtxt);
    static int iat_search(SCY_HANDLE hScyllaContext, DWORD_PTR *iatStart, size_t *iatSize, DWORD_PTR searchStart, BOOL advancedSearch);
    
    static ConfigurationHolder config;
    static PluginLoader plugins;

    static ProcessLister processLister;

    static Logger *Log;

#ifndef DEBUG_COMMENTS
    static DummyLogger debugLog;
# else
    static FileLog debugLog(DEBUG_LOG_FILENAME);
#endif /* DEBUG_COMMENTS */

private:

    static const TCHAR DEBUG_LOG_FILENAME[];
};
